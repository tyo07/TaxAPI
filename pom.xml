<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.project</groupId>
	<artifactId>taxutil</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>taxutil</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<jacoco.reportPath>${project.build.directory}/jacoco.exec</jacoco.reportPath>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<junit.version>4.13.1</junit.version>
		<testcontainer.version>1.14.3</testcontainer.version>
		<testcontainer.mysql.version>1.14.3</testcontainer.mysql.version>
		<maven.surefire.plugin.version>3.0.0-M4</maven.surefire.plugin.version>
		<coveralls.plugin.version>2.2.0</coveralls.plugin.version>
		<surefire-junit4.plugin.version>3.0.0-M4</surefire-junit4.plugin.version>
		<jacoco.maven.plugin.version>0.8.2</jacoco.maven.plugin.version>
		<mockito.plugin.version>1.9.5</mockito.plugin.version>
		<maven.failsafe.plugin.version>3.0.0-M5</maven.failsafe.plugin.version>
		<maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
<!--		<mysql.connector.java.version>8.0.11</mysql.connector.java.version>-->
		<fabric8.version>4.4.1</fabric8.version>
		<scala.maven.version>4.4.0</scala.maven.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
<!--			<version>${mysql.connector.java.version}</version>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainer.version}</version>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<version>${testcontainer.mysql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.2.32</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<version>${maven.failsafe.plugin.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>2.3.1.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>io.gatling.highcharts</groupId>
			<artifactId>gatling-charts-highcharts</artifactId>
			<scope>test</scope>
			<version>3.0.2</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-dev-properties</id>
								<!-- here the phase you need -->
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>src/main/resources</outputDirectory>
									<resources>
										<resource>
											<directory>./app_config/dev</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-dev-test-properties</id>
								<!-- here the phase you need -->
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>src/test/resources</outputDirectory>
									<resources>
										<resource>
											<directory>./app_config/dev</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven.failsafe.plugin.version}</version>
						<configuration>
							<skipITs>true</skipITs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>fabric</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<version>${fabric8.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>gatling</id>
			<properties>
				<testSourceDirectory>src/test/scala/reminderapi</testSourceDirectory>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.gatling</groupId>
						<artifactId>gatling-maven-plugin</artifactId>
						<version>3.0.1</version>
						<configuration>
							<simulationClass>${className}</simulationClass>
						</configuration>
					</plugin>
					<plugin>
						<groupId>net.alchim31.maven</groupId>
						<artifactId>scala-maven-plugin</artifactId>
						<version>${scala.maven.version}</version>
						<executions>
							<execution>
								<id>scala-test-compile</id>
								<phase>process-test-resources</phase>
								<goals>
									<goal>testCompile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>${maven.clean.plugin.version}</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>./src/main/resources</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-main-properties</id>
								<!-- here the phase you need -->
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>./src/main/resources</outputDirectory>
									<resources>
										<resource>
											<directory>./app_config/pro</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-test-properties</id>
								<!-- here the phase you need -->
								<phase>compile</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<outputDirectory>./src/test/resources</outputDirectory>
									<resources>
										<resource>
											<directory>./config/pro</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>8</source>
							<target>8</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven.surefire.plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit4</artifactId>
								<version>${surefire-junit4.plugin.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>unit-tests</id>
								<phase>test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skipTests>false</skipTests>
									<includes>
										<include>**/*Test.java</include>
									</includes>
								</configuration>
							</execution>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skipTests>false</skipTests>
									<includes>
										<include>**/*IT.*</include>
										<include>**/*Tests.*</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${maven.failsafe.plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<configuration>
							<excludes>
								<exclude>**/*Dto*.*</exclude>
								<exclude>**/*Entity*.*</exclude>
								<exclude>**/*Repository*.*</exclude>
								<exclude>**/*Application*.*</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<version>${coveralls.plugin.version}</version>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
